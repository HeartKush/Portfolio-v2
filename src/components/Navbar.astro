---
import { Image } from "astro:assets";
import Menu from "../../public/icon/menu.svg";
import Close from "../../public/icon/close.svg";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
}
export interface Props {
  links?: Array<Link>;
}

const { links } = Astro.props;
---

<header
  class="py-2 flex items-center top-0 w-full px-4 md:px-20 mx-auto justify-between"
>
  <a
    href="#"
    class="flex flex-grow basis-0 text-3xl font-bold tracking-tight from-[#FF1CF7] to-[#b249f8] bg-clip-text text-transparent bg-gradient-to-b"
    >UX/UI</a
  >

  <nav class="flex">
    <ul class="hidden md:flex text-slate-200 font-semibold ease-in-out">
      {
        links?.map(({ text, href, ariaLabel }) => (
          <li class="px-4 py-1 hover:text-fuchsia-500 text-xl">
            <a href={href} aria-label={ariaLabel}>
              {text}
            </a>
          </li>
        ))
      }
      <!-- Resto de tus elementos li -->
    </ul>
    <Image
      src={Menu}
      alt="Open menu"
      id="menuIcon"
      class="rounded-3xl w-10 mx-auto flex md:hidden transition-all duration-700 ease-in-out"
    />

    <Image
      src={Close}
      alt="Close menu"
      id="closeIcon"
      class="close-icon hidden menu-icon rounded-3xl w-10 mx-auto transition-transform duration-700 ease-in-out"
    />
  </nav>
  <div
    id="menu-backdrop"
    class="absolute bg-slate-200 backdrop-blur-lg rounded-lg left-[var(--left)]
    top-[var(--top)] w-[var(--width)] h-[var(--height)]
    transition-all duration-300 ease-in-out opacity-0 -z-10"
  >
  </div>
</header>

<div
  class="hidden h-screen w-full z-50 transition-transform duration-700 ease-in-out overflow-hidden lg:hidden fixed"
  id="menuMobile"
  role="dialog"
  aria-modal="true"
  data-headlessui-state="open"
  aria-labelledby="headlessui-dialog-title-22"
>
  <div
    class="absolute h-screen w-full bg-slate-900/25 backdrop-blur-lg transition-opacity opacity-100"
  >
  </div>
  <nav
    class="divide-slate-900/10 h-full text-4xl bg-slate-900/25 backdrop-blur-lg text-slate- flex flex-col justify-around"
  >
    <div class="items-start space-y-10 text-center text-slate-200 pb-20">
      {
        links?.map(({ text, href, ariaLabel }) => (
          <a class="block w-full py-2 font-semibold" href={href} aria-label={ariaLabel}>
            {text}
          </a>
        ))
      }
    </div>
    <div class="w-full mt-5 flex flex-row items-center justify-center">
      <div class="border-b-2 border-slate-300 flex-grow mx-2 lg:mx-10"></div>
      <p class="text-slate-200 mx-4 text-center text-lg">
        Â© 2023 <span class="text-fuchsia-400">IAPP</span> All rigths reserved.
      </p>
      <div class="border-b-2 border-slate-300 flex-grow mx-2 lg:mx-10"></div>
    </div>
  </nav>
</div>

<script>
  const menuIcon = document.getElementById("menuIcon") as HTMLHtmlElement;
  const closeIcon = document.getElementById("closeIcon") as HTMLHtmlElement;
  const menuMobile = document.getElementById("menuMobile") as HTMLElement;
  const listItem = document.querySelectorAll("li");
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement;
  const header = document.querySelector("header") as HTMLElement;

  window.addEventListener("scroll", () => {
    if (window.scrollY > 0) {
      header.classList.add("sticky", "top-0", "bg-slate-950", "z-10");
    } else {
      header.classList.remove("sticky", "top-0", "bg-slate-950", "z-10");
    }
  });

  document.querySelectorAll("#menuMobile a").forEach((menuItem) => {
    menuItem.addEventListener("click", () => {
      menuMobile.classList.add("hidden");

      menuIcon.classList.remove("hidden");
      closeIcon.classList.add("hidden");

      document.body.classList.remove("scroll-lock");
    });
  });

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();

      menuBackDrop.style.setProperty("--left", `${left}px`);
      menuBackDrop.style.setProperty("--top", `${top}px`);
      menuBackDrop.style.setProperty("--width", `${width}px`);
      menuBackDrop.style.setProperty("--height", `${height}px`);

      menuBackDrop.style.opacity = "1";
      menuBackDrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0";
      menuBackDrop.style.visibility = "hidden";
    });
  });

  function toggleIcons() {
    console.log("toggleIcons executed");
    menuIcon.classList.toggle("hidden");
    closeIcon.classList.toggle("hidden");
    menuMobile.classList.toggle("hidden");

    if (menuMobile.classList.contains("hidden")) {
      document.body.classList.remove("scroll-lock");
      header.classList.remove("sticky", "top-0", "bg-slate-950", "z-10");
    } else {
      document.body.classList.add("scroll-lock");
      header.classList.add("sticky", "top-0", "bg-slate-950", "z-10");
    }
  }

  menuIcon.addEventListener("click", toggleIcons);
  closeIcon.addEventListener("click", toggleIcons);
</script>
<style>
  body.scroll-lock {
    overflow: hidden;
  }
</style>
